{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","pages/AuthPage.js","hooks/message.hook.js","pages/CreatePage.js","components/Loader.js","components/LinkCard.js","pages/DetailPage.js","components/LinksList.js","pages/LinksPage.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","async","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","AuthPage","auth","useContext","text","window","M","toast","html","email","password","form","setForm","useEffect","updateTextFields","changeHandler","event","target","name","value","className","placeholder","id","type","onChange","htmlFor","disabled","onClick","style","marginRight","CreatePage","history","useHistory","link","setLink","paddingTop","e","onKeyPress","key","from","authorization","push","_id","Loader","display","justifyContent","LinkCard","href","to","rel","click","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","fetched","LinksList","links","length","map","index","LinksPage","setLinks","fetchLinks","Authorization","Navbar","padding","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","ReactDOM","render","document","getElementById"],"mappings":"mQAEaA,EAAU,WAAO,IAAD,EACGC,oBAAS,GADZ,mBACpBC,EADoB,KACXC,EADW,OAEDF,mBAAS,MAFR,mBAEpBG,EAFoB,KAEbC,EAFa,KAoC3B,MAAO,CAAEH,UAASI,QA5BFC,uBACd,SAAOC,GAAP,mCAAAC,EAAAC,OAAA,uDAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GACjDV,GAAW,GADb,SAIQS,IACFA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBANhC,WAAAJ,EAAA,MAS2BO,MAAMR,EAAK,CAAEG,SAAQC,OAAMC,aATtD,cASUI,EATV,mBAAAR,EAAA,MAUuBQ,EAASC,QAVhC,WAUUC,EAVV,OAWSF,EAASG,GAXlB,uBAYY,IAAIC,MAAMF,EAAKG,SAAW,mGAZtC,eAcInB,GAAW,GAdf,kBAeWgB,GAfX,wCAiBIhB,GAAW,GACXE,EAAS,KAAEiB,SAlBf,gEAsBA,IAKyBlB,QAAOmB,WAFfhB,uBAAY,kBAAMF,EAAS,QAAO,MClCvD,SAASmB,KAEF,IAAMC,EAAcC,wBAAc,CACvCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,iBAAiB,ICJNC,EAAW,WACtB,IAAMC,EAAOC,qBAAWT,GAClBH,ECJCf,uBAAY,SAAA4B,GACbC,OAAOC,GAAKF,GACdC,OAAOC,EAAEC,MAAM,CAAEC,KAAMJ,MAExB,IDFyB,EAGoBnC,IAAxCE,EAHoB,EAGpBA,QAASI,EAHW,EAGXA,QAASF,EAHE,EAGFA,MAAOmB,EAHL,EAGKA,WAHL,EAIJtB,mBAAS,CAC/BuC,MAAO,GACPC,SAAU,KANgB,mBAIrBC,EAJqB,KAIfC,EAJe,KAS5BC,qBAAU,WACRtB,EAAQlB,GACRmB,MACC,CAACnB,EAAOkB,EAASC,IAEpBqB,qBAAU,WACRR,OAAOC,EAAEQ,qBACR,IAEH,IAAMC,EAAgB,SAAAC,GACpBJ,EAAQ,eAAKD,EAAN,eAAaK,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAkBvD,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,oBACb,+GACA,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,cAAhB,sEACA,6BACE,yBAAKA,UAAU,eACb,2BACEC,YAAY,mDACZC,GAAG,QACHC,KAAK,OACLL,KAAK,QACLE,UAAU,eACVD,MAAOR,EAAKF,MACZe,SAAUT,IAEZ,2BAAOU,QAAQ,SAAf,UAEF,yBAAKL,UAAU,eACb,2BACEC,YAAY,kFACZC,GAAG,WACHC,KAAK,WACLL,KAAK,WACLE,UAAU,eACVD,MAAOR,EAAKD,SACZc,SAAUT,IAEZ,2BAAOU,QAAQ,YAAf,eAIN,yBAAKL,UAAU,eACb,4BACEA,UAAU,sBACVM,SAAUvD,EACVwD,QA9CS,0BAAAjD,EAAAC,OAAA,2EAAAD,EAAA,MAEEH,EAAQ,kBAAmB,OAApB,eAAiCoC,KAF1C,OAEXvB,EAFW,OAGjBG,EAAQH,EAAKG,SACbW,EAAKJ,MAAMV,EAAKQ,MAAOR,EAAKS,QAJX,yGA+CT+B,MAAO,CAAEC,YAAa,KAJxB,kCAQA,4BACET,UAAU,gCACVO,QA5DY,0BAAAjD,EAAAC,OAAA,2EAAAD,EAAA,MAEDH,EAAQ,qBAAsB,OAAvB,eAAoCoC,KAF1C,OAEdvB,EAFc,OAGpBG,EAAQH,EAAKG,SAHO,uGA6DZmC,SAAUvD,GAHZ,2EE/EC2D,EAAa,WACxB,IAAMC,EAAUC,cACV9B,EAAOC,qBAAWT,GAChBnB,EAAYN,IAAZM,QAHsB,EAINL,mBAAS,IAJH,mBAIvB+D,EAJuB,KAIjBC,EAJiB,KA0B9B,OAHArB,qBAAU,WACRR,OAAOC,EAAEQ,qBACR,IAED,yBAAKM,UAAU,OACb,yBAAKA,UAAU,mBAAmBQ,MAAO,CAAEO,WAAY,SACrD,yBAAKf,UAAU,eACb,2BACEC,YAAY,iJACZC,GAAG,OACHC,KAAK,OACLJ,MAAOc,EACPT,SAAU,SAAAY,GAAC,OAAIF,EAAQE,EAAEnB,OAAOE,QAChCkB,WA9BW,SAAMrB,GAAN,eAAAtC,EAAAC,OAAA,mDACD,UAAdqC,EAAMsB,IADS,4CAAA5D,EAAA,MAGIH,EACjB,qBACA,OACA,CACEgE,KAAMN,GAER,CAAEO,cAAc,UAAD,OAAYtC,EAAKN,UATnB,OAGTR,EAHS,OAWf2C,EAAQU,KAAR,kBAAwBrD,EAAK6C,KAAKS,MAClCrC,OAAOjB,KAAOA,EAZC,2GAgCb,2BAAOqC,QAAQ,QAAf,uFC1CGkB,EAAS,kBACpB,yBACEf,MAAO,CAAEgB,QAAS,OAAQC,eAAgB,SAAUV,WAAY,SAEhE,yBAAKf,UAAU,4BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,gBCbZ0B,EAAW,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACzB,OACE,oCACE,oEAEA,4FAEE,uBAAGc,KAAMd,EAAKe,GAAI/B,OAAO,SAASgC,IAAI,uBACnChB,EAAKe,KAGV,mEAEE,uBAAGD,KAAMd,EAAKM,KAAMtB,OAAO,SAASgC,IAAI,uBACrChB,EAAKM,OAGV,mLAC+B,gCAASN,EAAKiB,QAE7C,wGAEE,gCAAS,IAAIC,KAAKlB,EAAKmB,MAAMC,yBChBxBC,EAAa,WAAO,IACvB1D,EAAUO,qBAAWT,GAArBE,MADsB,EAED3B,IAArBM,EAFsB,EAEtBA,QAASJ,EAFa,EAEbA,QAFa,EAGND,mBAAS,MAHH,mBAGvB+D,EAHuB,KAGjBC,EAHiB,KAIxBqB,EAASC,cAAYlC,GAErBmC,EAAUjF,uBAAY,0BAAAE,EAAAC,OAAA,2EAAAD,EAAA,MAEFH,EAAQ,aAAD,OAAcgF,GAAU,MAAO,KAAM,CAChEf,cAAc,UAAD,OAAY5C,MAHH,OAElB8D,EAFkB,OAKxBxB,EAAQwB,GALgB,wGAOzB,CAAC9D,EAAO2D,EAAQhF,IAOnB,OAJAsC,qBAAU,WACR4C,MACC,CAACA,IAEAtF,EACK,kBAAC,EAAD,MAGF,qCAAIA,GAAW8D,GAAQ,kBAAC,EAAD,CAAUA,KAAMA,MC7BnC0B,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OAAKA,EAAMC,OAIT,+BACE,+BACE,4BACE,sCACA,wGACA,kGACA,4EAGJ,+BACGD,EAAME,KAAI,SAAC7B,EAAM8B,GAChB,OACE,4BACE,4BAAKA,EAAQ,GACb,4BAAK9B,EAAKM,MACV,4BAAKN,EAAKe,IACV,4BACE,kBAAC,IAAD,CAAMA,GAAE,kBAAaf,EAAKS,MAA1B,qDApBL,uBAAGtB,UAAU,UAAb,qFCEE4C,EAAY,WAAO,IAAD,EACH9F,mBAAS,IADN,mBACtB0F,EADsB,KACfK,EADe,OAEAhG,IAArBM,EAFqB,EAErBA,QAASJ,EAFY,EAEZA,QACTyB,EAAUO,qBAAWT,GAArBE,MAEFsE,EAAa1F,uBAAY,0BAAAE,EAAAC,OAAA,2EAAAD,EAAA,MAELH,EAAQ,YAAa,MAAO,KAAM,CACtD4F,cAAc,UAAD,OAAYvE,MAHA,OAErB8D,EAFqB,OAK3BO,EAASP,GALkB,wGAO5B,CAAC9D,EAAOrB,IAMX,OAJAsC,qBAAU,WACRqD,MACC,CAACA,IAEA/F,EACK,kBAAC,EAAD,MAGF,qCAAIA,GAAW,kBAAC,EAAD,CAAWyF,MAAOA,MCzB7BQ,EAAS,WACpB,IAAMrC,EAAUC,cACV9B,EAAOC,qBAAWT,GAOxB,OACE,6BACE,yBAAK0B,UAAU,4BAA4BQ,MAAO,CAAEyC,QAAS,WAC3D,0BAAMjD,UAAU,cAAhB,qGACA,wBAAIE,GAAG,aAAaF,UAAU,8BAC5B,4BACE,kBAAC,IAAD,CAAS4B,GAAG,WAAZ,+CAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,yCAEF,4BACE,uBAAGD,KAAK,IAAIpB,QAjBA,SAAAX,GACpBA,EAAMsD,iBACNpE,EAAKH,SACLgC,EAAQU,KAAK,OAcL,uCCUG8B,EAzBH,WAAO,IAAD,ECNK,WAAO,IAAD,EACDrG,mBAAS,MADR,mBACpB0B,EADoB,KACb4E,EADa,OAECtG,mBAAS,MAFV,mBAEpB2B,EAFoB,KAEZ4E,EAFY,OAGDvG,oBAAS,GAHR,mBAGpBwG,EAHoB,KAGbC,EAHa,KAOrB7E,EAAQtB,uBAAY,SAACoG,EAAUtD,GACnCkD,EAASI,GACTH,EAAUnD,GACVuD,aAAaC,QAZG,WAcd/F,KAAKC,UAAU,CAAEa,OAAQyB,EAAI1B,MAAOgF,OAErC,IAGG7E,EAASvB,uBAAY,WACzBgG,EAAS,MACTC,EAAU,MACVI,aAAaE,WAtBG,cAuBf,IAWH,OATAlE,qBAAU,WACR,IAAMzB,EAAOL,KAAKiG,MAAMH,aAAaI,QA1BrB,aA4BZ7F,GAAQA,EAAKQ,OACfE,EAAMV,EAAKQ,MAAOR,EAAKS,QAEzB8E,GAAS,KACR,CAAC7E,IAEG,CAAEA,QAAOC,SAAQH,QAAOC,SAAQ6E,SDzBSQ,GAAxCtF,EADQ,EACRA,MAAOE,EADC,EACDA,MAAOC,EADN,EACMA,OAAQF,EADd,EACcA,OAAQ6E,EADtB,EACsBA,MAChC1E,IAAoBJ,EACpBuF,EEPiB,SAAAnF,GACvB,OAAIA,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,UAAUC,OAAK,GACzB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUpC,GAAG,aAKjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUrC,GAAG,OFfFsC,CAAUtF,GAEzB,OAAK0E,EAIH,kBAAChF,EAAY6F,SAAb,CACEpE,MAAO,CACLvB,QACAE,QACAC,SACAF,WAGF,kBAAC,IAAD,KACGG,GAAmB,kBAAC,EAAD,MACpB,yBAAKoB,UAAU,aAAa+D,KAbzB,kBAAC,EAAD,O,MGXXK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.36c127a7.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // throw - генерирует исключение. Если срабатывает, то сразу передаёт управление блоку CATCH\r\n  // data.message - сообщение об ошибке с бека\r\n  // useCallback - чтобы не было рекурсии (Возвращает мемоизированный колбэк)\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n      try {\r\n        //Преобразовать в строку, иначе будет ошибка [object Object]\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        //Сформировать fetch-запрос\r\n        const response = await fetch(url, { method, body, headers });\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Что-то пошло не так!\");\r\n        }\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []); //useCallback чтобы не возникала рекурсия\r\n\r\n  return { loading, request, error, clearError };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nfunction noop() {} //Передаётся в качестве дефолтного значения пустая функция (no operation)\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false\r\n});\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { useHttp, useMessage } from \"../hooks\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const { loading, request, error, clearError } = useHttp(); //деструктурирование того, что возвращается хуком\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields(); //убирает визуальный баг с Materialize инпутами (теперь всегда активные labels)\r\n  }, []);\r\n\r\n  const changeHandler = event => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n      message(data.message);\r\n      auth.login(data.token, data.userId); //получает метод login из AuthContext и передаёт ему два параметра\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Сократи Ссылку</h1>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите email\"\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"yellow-input\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  placeholder=\"Введите пароль\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"yellow-input\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              disabled={loading}\r\n              onClick={loginHandler}\r\n              style={{ marginRight: 10 }}\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback(text => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks\";\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const pressHandler = async event => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          {\r\n            from: link\r\n          },\r\n          { authorization: `Bearer ${auth.token}` }\r\n        );\r\n        history.push(`/detail/${data.link._id}`);\r\n        window.data = data;\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields(); //убирает визуальный баг с Materialize инпутами (теперь всегда активные labels)\r\n  }, []);\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            placeholder=\"Вставьте ссылку  и нажмите Enter\"\r\n            id=\"link\"\r\n            type=\"text\"\r\n            value={link}\r\n            onChange={e => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"link\">Введите ссылку</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div\r\n    style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"2rem\" }}\r\n  >\r\n    <div className=\"preloader-wrapper active\">\r\n      <div className=\"spinner-layer spinner-red-only\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Ссылка</h2>\r\n\r\n      <p>\r\n        Ваша ссылка:\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Откуда:\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Количество кликов по ссылке: <strong>{link.click}</strong>\r\n      </p>\r\n      <p>\r\n        Дата создания:\r\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useHttp } from \"../hooks\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinkCard } from \"../components/LinkCard\";\r\n\r\nexport const DetailPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHttp();\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id; //().id указывает на /:id в URL\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        authorization: `Bearer ${token}`\r\n      });\r\n      setLink(fetched);\r\n    } catch (e) {}\r\n  }, [token, linkId, request]);\r\n\r\n  //Как только компонент прогрузится, сделай запрос по адресу из URL\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && link && <LinkCard link={link} />}</>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">Ссылок пока нет</p>;\r\n  }\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>№</th>\r\n          <th>Оригинальная</th>\r\n          <th>Сокращённая</th>\r\n          <th>Открыть</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {links.map((link, index) => {\r\n          return (\r\n            <tr>\r\n              <td>{index + 1}</td>\r\n              <td>{link.from}</td>\r\n              <td>{link.to}</td>\r\n              <td>\r\n                <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\n\r\nimport { useHttp } from \"../hooks\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { LinksList } from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { request, loading } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`\r\n      });\r\n      setLinks(fetched);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = event => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: \"0 2rem\" }}>\r\n        <span className=\"brand-logo\">Сокращение ссылок</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/create\">Создать</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Ссылки</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Выйти\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"materialize-css\";\n\nimport { useRoutes } from \"./routes\";\nimport { useAuth } from \"./hooks\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Loader } from \"./components/Loader\";\n\nconst App = () => {\n  const { token, login, logout, userId, ready } = useAuth();\n  const isAuthenticated = !!token; //token => boolean\n  const routes = useRoutes(isAuthenticated); //передаёт Boolean, в зависимости от которого меняются доступные роуты\n\n  if (!ready) {\n    return <Loader />;\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        login,\n        logout,\n        userId\n      }}\n    >\n      <Router>\n        {isAuthenticated && <Navbar />}\n        <div className=\"container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [ready, setReady] = useState(false); //как только срабатывает useEffect, переведёт этот флаг в true\r\n  //(чтобы не редиректило)\r\n\r\n  //Поменяй стейт токена и юзер-id, и запиши в localStorage\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({ userId: id, token: jwtToken })\r\n    ); //привести объект в строку\r\n  }, []);\r\n\r\n  //Занули стейт токена и юзер-id, и удали storageName в localStorage\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName)); //привести строку в объект\r\n    //Если дата есть и в ней есть токен, вызови login с этими параметрами из localStorage\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// Redirect - перекидывает на определённый роут, если был введён несуществующий путь\r\n\r\nimport { LinksPage, CreatePage, DetailPage, AuthPage } from \"./pages\";\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}